{"version":3,"sources":["Data/Races.js","Data/Classes.js","Data/BaseInventory.js","Components/CreateCharacter/CreateCharacter.js","Components/DiceStage/DiceStage.js","Components/DMPlan/DMPlan.js","Components/CharacterSheet/CharacterSheet.js","App.js","serviceWorker.js","index.js"],"names":["Races","Isen","name","special","story","Dether","Guldan","Elithin","Classes","Warrior","stat","strength","constitution","intelligence","perception","information","spells","hp","Sorcerer","charisma","description","available","Cleric","wisdom","dexterity","Rogue","BaseInventory","damage","armor","CreateCharacter","props","useState","setName","gender","setGender","race","setRace","classC","setClassC","setStrength","setDexterity","setPerception","setConstitution","setWisdom","setIntelligence","setCharisma","checkStats","updater","prevState","newState","id","onSubmit","e","preventDefault","updateCharacter","class","stats","parseInt","inventory","updateReady2Play","htmlFor","type","value","onChange","target","disabled","selected","min","max","DiceStage","diceResults","setDiceResults","throwDice","diceAmount","diceMax","results","i","push","Math","round","ceil","random","console","log","thrownDices","map","dice","className","onClick","length","DMPLan","CharacterSheet","abilities","setAbilities","setSpells","setInventory","armorClass","setArmorClass","newItem","setNewItem","showAdd","setShowAdd","setHp","character","displayDescription","document","querySelector","classList","contains","onClickUseItem","newArray","index","item","indexOf","abilityRows","ability","split","floor","spellsRows","spell","rowId","join","checked","inventoryRows","useEffect","abilityArray","armorBonus","newInventory","App","DM","setDM","player","setPlayer","setCharacter","ready2play","setReady2Play","newChar","boolean","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9fd2e0ef.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Races = {\r\n    Isen: {\r\n        name: \"Isen\",\r\n        special: \"Resistance to Cold +5,Will +1\",\r\n        story:\r\n            <p>Isens are a former slave race turned warrior race, known for their people-focused republic and determination. <br/>\r\n            In Isen society every person is valued highly and it's alien to many other races on how the Isens always make sure that\r\n            every citizen is a part of the nations well being, just as the nation is highly responsible for its citizens well being.<br/>\r\n            Many Isens have dark hair and pale skin, well adjusted to the cold of Nathira, their homeland.\r\n            </p>,\r\n    },\r\n    Dether: {\r\n        name: \"Dether\",\r\n        special: \"Resistance to Fire +5,Armor Class +1\",\r\n        story: <p>Dethers are said to be descendants of dragons, but considering that it's been many generations since anyone has seen a dragon, if they ever did. <br/>\r\n                The Dethers do however have a small shimmer of scales on their skin that can be seen when looked upon really closely. These scales make them more resistant to damage, both physical and fire. <br/>\r\n                Dethern society is strongly hierarchical monarchy and at the top are the nobles with their riches.\r\n            </p>,\r\n    },\r\n    Guldan: {\r\n        name: \"Guldan\",\r\n        special: \"Sneak +5,Crafting +1\",\r\n        story: <p>Guldans are a dwarven race from the southern forrests of Therassia, a nation called 'Gold Woods'. Their skin is dark, a slight golden brown, and\r\n            they are often clad in light garments, prioriting moving freely rather than heavy armor. <br/>\r\n            Their society is monarchical but rather than based on lineage, their queen or king is selected by a trial called 'The Hunting'.<br/>\r\n            Guldans are highly adaptable to their environment and know how to use it to their best benefit.\r\n        </p>,\r\n    },\r\n    Elithin: {\r\n        name: \"Elithin\",\r\n        special: \"Magic Resistance +5,Intelligence Checks +1\",\r\n        story: <p>Elithins are high elves and said to be the oldest race of Therassia, though some recent discoveries have made some scholar starting to question this idea. <br/>\r\n        The Elithins are tall and value art and magic highly. Their society is a military magic based empire governed by commitées chosen from their strength in art of magic. <br />\r\n        Their natural capacity for magic has also made them resistance to it.\r\n        </p>,\r\n    },\r\n}\r\n\r\nexport default Races;","import React from 'react';\r\nconst Classes = {\r\n    Warrior: {\r\n        stat: {\r\n            strength: 2,\r\n            constitution: 2,\r\n            intelligence: -2,\r\n            perception: -1\r\n        },\r\n        information: <p>Warriors are typically fighters wielding a weapon, either one handed or double handed, and a shield. <br />\r\n            They get the following benefits/disadvantages: <br />\r\n            <b>Strength: +2</b><br />\r\n            <b>Constitution: +2</b><br />\r\n            <b>Intelligence: -2</b><br />\r\n            <b>Perception: -1</b><br />\r\n        </p>,\r\n        spells: [],\r\n        hp: 12\r\n    },\r\n    Sorcerer: {\r\n        stat: {\r\n            intelligence: 2,\r\n            charisma: 2,\r\n            strength: -2,\r\n            constitution: -1\r\n        },\r\n        information: <p>Sorcerers are magic users, some wielding their arcane elemental magic through years of studies, and some from a natural innate power that has been inside them since birth. <br />\r\n        They get the following benefits/disadvantages: <br />\r\n            <b>Intelligence: +2</b><br />\r\n            <b>Charisma: +2</b><br />\r\n            <b>Strength: -2</b><br />\r\n            <b>Constitution: -1</b><br />\r\n        </p>,\r\n        spells: [\r\n            {name: \"Acid Splash\", description: \"The Sorcerer shoots a splash of acid from their fingers, dealing 1d6 damage.\", available: true},\r\n            {name: \"Mage Armor\", description: \"The Sorcerer surrounds themselves with an arcane armor, giving them +5 to Armor Class\", available: true},\r\n            {name: \"Magic Missle\", description: \"The Sorcerer shoots three missiles of magic energy from their fingers, dealing 1d6 damage per missle.\", available: true},\r\n            {name: \"Elemental Armor\", description: \"The Sorcerer surrounds themselves with magic energy, protecting them from all elemental damage. The armor absorbs 15 points of elemental damage before dissolving.\", available: true},\r\n            {name: \"Fly\", description: \"The Sorcerer gains the ability to fly for ten metres. This spell lasts only 10 seconds.\", available: true},\r\n            {name: \"Charm\", description: \"The Sorcerer shoots a circle shaped blue light at their opponent, and if it hits the opponent might be charmed for two rounds. The spell uses a 1d8 + the Sorcerers charisma score versus the opponents willpower modifier.\", available: true},\r\n        ],\r\n        hp: 8\r\n    },\r\n    Cleric: {\r\n        stat: {\r\n            wisdom: 2,\r\n            charisma: 2,\r\n            dexterity: -2,\r\n            strength: -1\r\n        },\r\n        information: <p>Clerics are warrior priests of their god, wielding a mix of martial skill and divine spells, mixing healing with damage  <br />\r\n        They get the following benefits/disadvantages: <br />\r\n            <b>Wisdom: +2</b><br />\r\n            <b>Charisma: +2</b><br />\r\n            <b>Dexterity: -2</b><br />\r\n            <b>Strength: -1</b><br />\r\n        </p>,\r\n        spells: [\r\n            {name: \"Shimmering Light\", description: \"The Cleric swoops their weapon in front of them, creating a bright light that has a chance to blind the opponent. The spell uses a 1d6 + the Clerics wisdom modifier vs the opponents perception modidifer.\", available: true},\r\n            {name: \"Small Healing\", description: \"The Cleric heals a person or creature of their choice by 1d8.\", available: true},\r\n            {name: \"Elemental Weapon\", description: \"The Cleric casts this spell on their weapon, adding 1d4 fire or cold damage to their weapon for two rounds.\", available: true},\r\n            {name: \"Turn Undead\", description: \"The Cleric surrounds themselves with holy light and all undead within a ten metres radius might be destroyed. The spell uses a 1d8 + the Clerics wisdom modifier\", available: true},\r\n            {name: \"Silent Prayer\", description: \"The Cleric calls out to their god, adding +1 to their attack bonus for three rounds.\", available: true},\r\n            {name: \"Lift Heavy\", description: \"The Cleric gains amazing strength by their god, being able to lift extremely heavy objects. The Cleric rolls a 2d12 + their strength modifier to check their strength.\", available: true},\r\n        ],\r\n        hp: 10\r\n    },\r\n    Rogue: {\r\n        stat: {\r\n            dexterity: 2,\r\n            charisma: 4,\r\n            constitution: -2,\r\n            wisdom: -1\r\n        },\r\n        information: <p>Rogues are quick of both wit and dexterity, controlling the situation either with their charming personality or by using their thieves skills to get what they need. <br />\r\n        They get the following benefits/disadvantages: <br />\r\n            <b>Dexterity: +2</b><br />\r\n            <b>Charisma: +4</b><br />\r\n            <b>Constitution: -2</b><br />\r\n            <b>Wisdom: -1</b><br />\r\n        </p>,\r\n        spells:  [],\r\n        hp: 10\r\n    },\r\n}\r\n\r\nexport default Classes;","const BaseInventory = {\r\n    Warrior: [\r\n        {name: \"Longsword\", description: \"It's an average longsword.\", damage: \"1d10\", available: true },\r\n        {name: \"Shield\", description: \"It's an average shield.\", armor: 3, available: true},\r\n        {name: \"Heavy Armor\", description: \"It's an average heavy armor.\", armor: 5, available: true},\r\n        {name: \"50 feet Rope\", description: \"It's a thick long rope.\", available: true},\r\n        {name: \"Torch\", description: \"It's a torch.\", available: true},\r\n        {name: \"Healing Potion\", description: \"Heals 1d6 damage on drinking.\", available: true},\r\n        {name: \"Healing Potion\", description: \"Heals 1d6 damage on drinking.\", available: true}\r\n    ],\r\n    Sorcerer: [\r\n        {name: \"Staff\", description: \"It's an average staff.\", damage: \"1d6\", available: true},\r\n        {name: \"Robe\", description: \"It's an average robe.\", armor: 0, available: true},        \r\n        {name: \"50 feet Rope\", description: \"It's a thick long rope.\", available: true},\r\n        {name: \"Torch\", description: \"It's a torch.\", available: true},\r\n        {name: \"Healing Potion\", description: \"Heals 1d6 damage on drinking.\", available: true},\r\n        {name: \"Healing Potion\", description: \"Heals 1d6 damage on drinking.\", available: true}\r\n    ],\r\n    Cleric: [\r\n        {name: \"Hammer\", description: \"It's an average hammer.\", damage: \"1d8\", available: true},\r\n        {name: \"Shield\", description: \"It's an average shield.\", armor: 3, available: true},\r\n        {name: \"Heavy Armor\", description: \"It's an average heavy armor.\", armor: 5, available: true},        \r\n        {name: \"50 feet Rope\", description: \"It's a thick long rope.\", available: true},\r\n        {name: \"Torch\", description: \"It's a torch.\", available: true},\r\n        {name: \"Healing Potion\", description: \"Heals 1d6 damage on drinking.\", available: true},\r\n        {name: \"Healing Potion\", description: \"Heals 1d6 damage on drinking.\", available: true}\r\n    ],\r\n    Rogue: [\r\n        {name: \"Dagger\", description: \"It's an average dagger.\", damage: \"1d8\", available: true},\r\n        {name: \"Dagger\", description: \"It's an average dagger.\", damage: \"1d8\", available: true},\r\n        {name: \"Light Armor\", description: \"It's an average light armor.\", armor: 3, available: true},        \r\n        {name: \"50 feet Rope\", description: \"It's a thick long rope.\", available: true},\r\n        {name: \"Torch\", description: \"It's a torch.\", available: true},\r\n        {name: \"Healing Potion\", description: \"Heals 1d6 damage on drinking.\", available: true},\r\n        {name: \"Healing Potion\", description: \"Heals 1d6 damage on drinking.\", available: true}\r\n    ],\r\n}\r\n\r\nexport default BaseInventory;","import React, { useState } from 'react';\r\nimport Races from \"../../Data/Races\";\r\nimport Classes from \"../../Data/Classes\";\r\nimport BaseInventory from \"../../Data/BaseInventory\";\r\nimport './CreateCharacter.css';\r\n\r\nconst CreateCharacter = (props) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [gender, setGender] = useState(\"female\");\r\n    const [race, setRace] = useState(\"\");\r\n    const [classC, setClassC] = useState(\"\");\r\n    const [strength, setStrength] = useState(10);\r\n    const [dexterity, setDexterity] = useState(10);\r\n    const [perception, setPerception] = useState(10);\r\n    const [constitution, setConstitution] = useState(10);\r\n    const [wisdom, setWisdom] = useState(10);\r\n    const [intelligence, setIntelligence] = useState(10);\r\n    const [charisma, setCharisma] = useState(10);\r\n\r\n    const onChangeName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const onChangeGender = (e) => {\r\n        setGender(e.target.value);\r\n    }\r\n    const onChangeRace = (e) => {\r\n        setRace(e.target.value);\r\n    }\r\n    const onChangeClassC = (e) => {\r\n        setClassC(e.target.value);\r\n    }\r\n    const onChangeStrength = (e) => {\r\n        checkStats(setStrength, strength, parseInt(e.target.value));\r\n    }\r\n    const onChangeDexterity = (e) => {\r\n        checkStats(setDexterity, dexterity, parseInt(e.target.value));\r\n    }\r\n    const onChangeConstitution = (e) => {\r\n        checkStats(setConstitution, constitution, parseInt(e.target.value));\r\n    }\r\n    const onChangePerception = (e) => {\r\n        checkStats(setPerception, perception, parseInt(e.target.value));\r\n    }\r\n    const onChangeWisdom = (e) => {\r\n        checkStats(setWisdom, wisdom, parseInt(e.target.value));\r\n    }\r\n    const onChangeIntelligence = (e) => {\r\n        checkStats(setIntelligence, intelligence, parseInt(e.target.value));\r\n    }\r\n    const onChangeCharisma = (e) => {\r\n        checkStats(setCharisma, charisma, parseInt(e.target.value));\r\n    }\r\n    const onSubmitCharacter = (e) => {\r\n        e.preventDefault();\r\n        if (!name || !gender || !race || !classC) {\r\n            return;\r\n        }\r\n        props.updateCharacter({\r\n            name: name,\r\n            gender: gender,\r\n            race: race,\r\n            class: classC,\r\n            stats: {\r\n                strength: Classes[classC].stat[\"strength\"] ? parseInt(strength) + Classes[classC].stat[\"strength\"] : parseInt(strength),\r\n                dexterity: Classes[classC].stat[\"dexterity\"] ? parseInt(dexterity) + Classes[classC].stat[\"dexterity\"] : parseInt(dexterity),\r\n                constitution: Classes[classC].stat[\"constitution\"] ? parseInt(constitution) + Classes[classC].stat[\"constitution\"] : parseInt(constitution),\r\n                perception: Classes[classC].stat[\"perception\"] ? parseInt(perception) + Classes[classC].stat[\"perception\"] : parseInt(perception),\r\n                wisdom: Classes[classC].stat[\"wisdom\"] ? parseInt(wisdom) + Classes[classC].stat[\"wisdom\"] : parseInt(wisdom),\r\n                intelligence: Classes[classC].stat[\"intelligence\"] ? parseInt(intelligence) + Classes[classC].stat[\"intelligence\"] : parseInt(intelligence),\r\n                charisma: Classes[classC].stat[\"charisma\"] ? parseInt(charisma) + Classes[classC].stat[\"charisma\"] : parseInt(charisma)\r\n            },\r\n            special: Races[race].special,\r\n            spells: Classes[classC].spells,\r\n            inventory: BaseInventory[classC],\r\n            hp: Classes[classC].hp\r\n        });\r\n\r\n        props.updateReady2Play(true);\r\n    }\r\n\r\n    const checkStats = (updater, prevState, newState) => {\r\n        const total = (strength + dexterity + constitution + perception + wisdom + intelligence + charisma - 70);\r\n        if (newState < 10) {\r\n            return;\r\n        }\r\n        if (total >= 20 && prevState < newState) {\r\n            return;\r\n        }\r\n        updater(newState);\r\n    }\r\n\r\n    return (\r\n        <div id=\"CreateCharacter\">\r\n            <form onSubmit={onSubmitCharacter}>\r\n                <label htmlFor=\"name\">Name\r\n                    <input id=\"name\" type=\"text\" value={name} onChange={onChangeName} />\r\n                </label>\r\n                <label htmlFor=\"gender\">Gender\r\n                    <select id=\"gender\" onChange={onChangeGender}>\r\n                        <option disabled selected value>Select a gender</option>\r\n                        <option>Male</option>\r\n                        <option>Female</option>\r\n                        <option>Other</option>\r\n                    </select>\r\n                </label>\r\n                <label htmlFor=\"race\">Race\r\n                    <select id=\"race\" onChange={onChangeRace}>\r\n                        <option disabled selected value>Select a race</option>\r\n                        <option>Isen</option>\r\n                        <option>Dether</option>\r\n                        <option>Guldan</option>\r\n                        <option>Elithin</option>\r\n                    </select>\r\n                </label>\r\n                {race ? \r\n                    <div id=\"Information_container\">\r\n                    {Races[race] ? Races[race].story : \"\"}\r\n                    <h3>Specials:</h3>\r\n                    {Races[race] ? Races[race].special : \"\"}\r\n                </div>\r\n                : <></>\r\n                }\r\n               \r\n                <label htmlFor=\"classC\">Class\r\n                    <select id=\"classC\" onChange={onChangeClassC}>\r\n                        <option disabled selected value>Select a class</option>\r\n                        <option>Warrior</option>\r\n                        <option>Sorcerer</option>\r\n                        <option>Cleric</option>\r\n                        <option>Rogue</option>\r\n                    </select>\r\n                </label>\r\n                <div id=\"Information_container\">\r\n                    {Classes[classC] ? Classes[classC].information : \"\"}\r\n                </div>\r\n                <label htmlFor=\"strength\">Strength\r\n                    <input id=\"strength\" type=\"number\" min={10} max={18} value={strength} onChange={onChangeStrength} />\r\n                </label>\r\n                <label htmlFor=\"dexterity\">Dexterity\r\n                    <input id=\"dexterity\" type=\"number\" min={10} max={18} value={dexterity} onChange={onChangeDexterity} />\r\n                </label>\r\n                <label htmlFor=\"constitution\">Constitution\r\n                    <input id=\"constitution\" type=\"number\" min={10} max={18} value={constitution} onChange={onChangeConstitution} />\r\n                </label>\r\n                <label htmlFor=\"perception\">Perception\r\n                    <input id=\"perception\" type=\"number\" min={10} max={18} value={perception} onChange={onChangePerception} />\r\n                </label>\r\n                <label htmlFor=\"wisdom\">Wisdom\r\n                    <input id=\"wisdom\" type=\"number\" min={10} max={18} value={wisdom} onChange={onChangeWisdom} />\r\n                </label>\r\n                <label htmlFor=\"intelligence\">Intelligence\r\n                    <input id=\"intelligence\" type=\"number\" min={10} max={18} value={intelligence} onChange={onChangeIntelligence} />\r\n                </label>\r\n                <label htmlFor=\"charisma\">Charisma\r\n                    <input id=\"charisma\" type=\"number\" min={10} max={18} value={charisma} onChange={onChangeCharisma} />\r\n                </label>\r\n                <button>Create your character</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateCharacter;","import React, { useState } from 'react';\r\nimport './DiceStage.css';\r\n\r\nconst DiceStage = () => {\r\n    const [diceResults, setDiceResults] = useState([]);\r\n\r\n    const throwDice = (diceAmount, diceMax) => {\r\n        let results = [];\r\n        for (let i = 0; i < diceAmount; i++) {\r\n            results.push(Math.round(Math.ceil(Math.random() * diceMax)))\r\n        }\r\n        setDiceResults(results)\r\n    }\r\n    console.log(diceResults)\r\n\r\n    let thrownDices = diceResults.map((dice) => {\r\n\r\n/*         let dotsArray = [];\r\n        for (let i = 0; i < dice; i++) {\r\n            dotsArray.push(i);\r\n        } */\r\n/*         let dots = dotsArray.map(dot => {\r\n            return (\r\n                <div className=\"dot\">•</div>\r\n            )\r\n        }); */\r\n\r\n        /* return (\r\n            <div className=\"dice dots\">{dots}</div>\r\n        ) */\r\n\r\n        return (\r\n            <div className=\"dice\">{dice}</div>\r\n        )\r\n    })\r\n    return (\r\n        <div id=\"DiceStage\">\r\n            <div id=\"Dice_Container\">\r\n                <div className=\"dice 1d2\" onClick={() => { throwDice(1, 2) }}>1d2</div>\r\n                <div className=\"dice 1d4\" onClick={() => { throwDice(1, 4) }}>1d4</div>\r\n                <div className=\"dice 1d6\" onClick={() => { throwDice(1, 6) }}>1d6</div>\r\n                <div className=\"dice 1d8\" onClick={() => { throwDice(1, 8) }}>1d8</div>\r\n                <div className=\"dice 1d10\" onClick={() => { throwDice(1, 10) }}>1d10</div>\r\n                <div className=\"dice 1d12\" onClick={() => { throwDice(1, 12) }}>1d12</div>\r\n                <div className=\"dice 1d20\" onClick={() => { throwDice(1, 20) }}>1d20</div>\r\n                <div id=\"2d2_Container\" className=\"doubleDice_Container\" onClick={() => { throwDice(2, 2) }}>\r\n                    <div className=\"dice 1d2\">1d2</div>\r\n                    <div className=\"dice 1d2\">1d2</div>\r\n                </div>\r\n                <div id=\"2d4_Container\" className=\"doubleDice_Container\" onClick={() => { throwDice(2, 4) }}>\r\n                    <div className=\"dice 1d4\">1d4</div>\r\n                    <div className=\"dice 1d4\">1d4</div>\r\n                </div>\r\n                <div id=\"2d6_Container\" className=\"doubleDice_Container\" onClick={() => { throwDice(2, 6) }}>\r\n                    <div className=\"dice 1d6\">1d6</div>\r\n                    <div className=\"dice 1d6\">1d6</div>\r\n                </div>\r\n                <div id=\"2d8_Container\" className=\"doubleDice_Container\" onClick={() => { throwDice(2, 8) }}>\r\n                    <div className=\"dice 1d8\">1d8</div>\r\n                    <div className=\"dice 1d8\">1d8</div>\r\n                </div>\r\n                <div id=\"2d10_Container\" className=\"doubleDice_Container\" onClick={() => { throwDice(2, 10) }}>\r\n                    <div className=\"dice 1d10\">1d10</div>\r\n                    <div className=\"dice 1d10\">1d10</div>\r\n                </div>\r\n                <div id=\"2d12_Container\" className=\"doubleDice_Container\" onClick={() => { throwDice(2, 12) }}>\r\n                    <div className=\"dice 1d12\">1d12</div>\r\n                    <div className=\"dice 1d12\">1d12</div>\r\n                </div>\r\n            </div>\r\n            {diceResults.length > 0 ?\r\n                <div id=\"Result_Container\">\r\n                    <h3>Results:</h3>\r\n                    <div id=\"Result_Dices\">\r\n                        {thrownDices}\r\n                    </div>\r\n                </div>\r\n                : <></>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DiceStage;\r\n","import React from 'react';\r\nimport DiceStage from \"../DiceStage/DiceStage\";\r\nimport './DMPlan.css';\r\n\r\nconst DMPLan = () => {\r\n  return (\r\n    <div id=\"DMPLan\">\r\n        <DiceStage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DMPLan;","import React, { useState, useEffect } from 'react';\r\nimport DiceStage from \"../DiceStage/DiceStage\";\r\nimport './CharacterSheet.css';\r\n\r\nconst CharacterSheet = (props) => {\r\n    const [abilities, setAbilities] = useState([]);\r\n    const [spells, setSpells] = useState([]);\r\n    const [inventory, setInventory] = useState([]);\r\n    const [armorClass, setArmorClass] = useState(10);\r\n    const [newItem, setNewItem] = useState(\"\");\r\n    const [showAdd, setShowAdd] = useState(false);\r\n    const [hp, setHp] = useState(0);\r\n    const { character } = props;\r\n\r\n    console.log(character)\r\n\r\n    const displayDescription = (id) => {\r\n        if (document.querySelector(`#${id}`).classList.contains(\"hide\")) {\r\n            document.querySelector(`#${id}`).className = \"show main_td\";\r\n        }\r\n        else {\r\n            document.querySelector(`#${id}`).className = \"hide\";\r\n        }\r\n    }\r\n\r\n    const onClickUseItem = (updater, prevState, name) => {\r\n        let newArray = [...prevState];\r\n        const index = newArray.map((item) => { return item.name }).indexOf(name);\r\n        newArray[index].available = !newArray[index].available;\r\n        updater(newArray);\r\n    }\r\n\r\n    const addItem = () => {\r\n        if (!newItem) {\r\n            return;\r\n        }\r\n        let newInventory = [...inventory];\r\n        newInventory.push({\r\n            name: newItem,\r\n            description: \"\",\r\n            available: true\r\n        });\r\n        setInventory(newInventory)\r\n        setNewItem(\"\");\r\n        setShowAdd(false);\r\n    }\r\n\r\n    const onChangeNewItem = (e) => {\r\n        setNewItem(e.target.value);\r\n    }\r\n\r\n    const onChangeHP = (e) => {\r\n        setHp(e.target.value);\r\n    }\r\n    \r\n    let abilityRows = abilities.map((ability, index) => {\r\n        if (index === 0) {\r\n            let special = character.special.split(\",\");\r\n            return (\r\n                <tr>\r\n                    <td>{ability.ability}</td>\r\n                    <td>{ability.value}</td>\r\n                    <td>{Math.floor((ability.value - 10) / 2)}</td>\r\n                    <td>{armorClass}</td>\r\n                    <td>{special[0]}</td>\r\n                </tr>\r\n            )\r\n        }\r\n        if (index === 1) {\r\n            let special = character.special.split(\",\");\r\n            return (\r\n                <tr>\r\n                    <td>{ability.ability}</td>\r\n                    <td>{ability.value}</td>\r\n                    <td>{Math.floor((ability.value - 10) / 2)}</td>\r\n                    <td></td>\r\n                    <td>{special[1]}</td>\r\n                </tr>\r\n            )\r\n        }\r\n        return (\r\n            <tr>\r\n                <td>{ability.ability}</td><td>{ability.value}</td><td>{Math.floor((ability.value - 10) / 2)}</td>\r\n            </tr>\r\n        )\r\n    });\r\n\r\n    let spellsRows = spells.map(spell => {\r\n        let rowId = spell.name.split(\" \").join(\"\");\r\n        return (\r\n            <>\r\n                <tr>\r\n                    <td className=\"main_td\" onClick={() => { displayDescription(rowId) }}>{spell.name}</td><td className=\"check_td\"><input type=\"checkbox\" onClick={() => { onClickUseItem(setSpells, spells, spell.name) }} checked={spell.available} /></td>\r\n                </tr>\r\n                <tr id={rowId} className=\"hide\">\r\n                    <td>{spell.description}</td><td></td>\r\n                    <hr />\r\n                </tr>       \r\n            </>\r\n        )\r\n    });\r\n\r\n    let inventoryRows = inventory.map(item => {\r\n        let rowId = \"\";\r\n        if (item.name === \"50 feet Rope\") {\r\n            rowId = \"rope\"\r\n        }\r\n        else {\r\n            rowId = item.name.split(\" \").join(\"\");\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <tr>\r\n                    <td className=\"main_td\" onClick={() => { displayDescription(rowId) }}>{item.name}</td><td className=\"check_td\"><input type=\"checkbox\" checked={item.available} onClick={() => { onClickUseItem(setInventory, inventory, item.name) }} /></td>\r\n                </tr>\r\n                <tr id={rowId} className=\"hide\">\r\n                    <td>{item.description}</td>\r\n                    <td>{item.damage ? `damage: ${item.damage}` : item.armor >= 0 ? `Armor: ${item.armor}` : <></>}</td>\r\n                    <hr />\r\n                </tr>\r\n            </>\r\n        )\r\n    });\r\n\r\n    useEffect(() => {\r\n        let abilityArray = [];\r\n        for (let ability in character.stats) {\r\n            abilityArray.push({ ability: ability, value: character.stats[ability] });\r\n        }\r\n        setAbilities(abilityArray);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setSpells([...character.spells]);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setInventory([...character.inventory]);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setHp((character.hp + Math.floor((character.stats[\"constitution\"] - 10) / 2)));\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        let armorBonus = Math.floor((character.stats[\"dexterity\"] - 10) / 2);\r\n        for (let item in character.inventory) {\r\n            if (character.inventory[item].armor) {\r\n                armorBonus += character.inventory[item].armor;\r\n            }\r\n        }\r\n        if (character.race === \"Dether\") {\r\n            armorBonus += 1;\r\n        }\r\n        armorBonus += armorClass;\r\n        setArmorClass(armorBonus)\r\n    }, [character]);\r\n\r\n    return (\r\n        <div id=\"CharacterSheet\">\r\n            <div id=\"Character_header\">\r\n                <h1>{character.name}</h1>\r\n                <h5>The {character.race} {character.gender === \"Female\" ?\r\n                    character.class === \"Sorcerer\" ? \"Sorceress\" : character.class\r\n                    : character.class}\r\n                </h5>\r\n                <label htmlFor=\"HP\">\r\n                    HP: <input id=\"HP_input\" type=\"number\" onChange={onChangeHP} value={hp} />\r\n                </label>\r\n            </div>\r\n            <div id=\"Character_stats\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Ability</th><th>Score</th><th>Modifier</th><th>Armor Class</th><th>Special</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {abilityRows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            {spells.length > 0 ?\r\n                <>\r\n                    <div id=\"Character_spells\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Spell</th><th>Available</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {spellsRows}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <hr />\r\n                </>\r\n                : <></>}\r\n\r\n\r\n\r\n            <div id=\"Character_inventory\">\r\n                <div id=\"AddItem\" onClick={() => {setShowAdd(!showAdd)}}>+</div>\r\n                <div className={showAdd ? \"\" : \"hide\"}>\r\n                    <input type=\"text\" onChange={onChangeNewItem}/><button onClick={addItem}>Add item</button>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Items</th><th>Available</th><th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {inventoryRows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <hr />\r\n            <div id=\"DiceStage_container\">\r\n                <DiceStage />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CharacterSheet;\r\n","import React, { useState } from 'react';\nimport CreateCharacter from \"./Components/CreateCharacter/CreateCharacter\";\nimport DMPlan from \"./Components/DMPlan/DMPlan\";\nimport CharacterSheet from \"./Components/CharacterSheet/CharacterSheet\";\nimport './App.css';\n\nconst App = () => {\n  const [DM, setDM] = useState(false);\n  const [player, setPlayer] = useState(false);\n  const [character, setCharacter] = useState({});\n  const [ready2play, setReady2Play] = useState(false);\n\n  const updateCharacter = (newChar) => {\n    setCharacter(newChar);\n  }\n  const updateReady2Play = (boolean) => {\n    setReady2Play(boolean)\n  }\n\n  if (ready2play) {\n    return (\n      <div id=\"App\">\n        <CharacterSheet character={character} />\n      </div>\n    )\n  }\n\n  if (DM) {\n    return (\n      <div id=\"App\">\n        <div id=\"Button_container\">\n          <button onClick={() => { setPlayer(false); setDM(true); }}>DM</button>\n          <button onClick={() => { setDM(false); setPlayer(true); }}>Player</button>\n        </div>\n        <DMPlan />\n      </div>\n    )\n  }\n\n  if (player) {\n    return (\n      <div id=\"App\">\n        <CreateCharacter updateCharacter={updateCharacter} updateReady2Play={updateReady2Play} />\n      </div>\n    )\n  }\n\n  return (\n    <div id=\"App\">\n      <div id=\"Button_container\">\n        <button onClick={() => { setPlayer(false); setDM(true); }}>DM</button>\n        <button onClick={() => { setDM(false); setPlayer(true); }}>Player</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}